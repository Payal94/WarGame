/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wargame;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.UIManager;

/**
 *
 * @author chaitanya
 */
public class warUI extends javax.swing.JFrame {

    public String player_1 = "Computer" , player_2="Player";
    public int map_matrix[][],occupied[][],turn=0,scores[];
    public JButton Button_arr[][];
    public boolean started=false,alphabeta1=false,alphabeta2=false;
    /**
     * Creates new form warUI
     */
    public warUI() {
        initComponents();
        
        jComboBox5.setEnabled(false);
        map_matrix = new int[6][6];
        occupied = new int[6][6];
        scores = new int[2];
        scores[0]=0;
        scores[1]=0;
        
        for(int i=0;i<6;i++)
        {
            for(int j=0;j<6;j++)
            {
                occupied[i][j]=-1;
            }
        }
        Button_arr=new JButton[6][6];
        Button_arr[0][0]=jButton1;
        Button_arr[0][1]=jButton2;
        Button_arr[0][2]=jButton3;
        Button_arr[0][3]=jButton4;
        Button_arr[0][4]=jButton5;
        Button_arr[0][5]=jButton6;
        Button_arr[1][0]=jButton7;
        Button_arr[1][1]=jButton8;
        Button_arr[1][2]=jButton9;
        Button_arr[1][3]=jButton10;
        Button_arr[1][4]=jButton11;
        Button_arr[1][5]=jButton12;
        Button_arr[2][0]=jButton13;
        Button_arr[2][1]=jButton14;
        Button_arr[2][2]=jButton15;
        Button_arr[2][3]=jButton16;
        Button_arr[2][4]=jButton17;
        Button_arr[2][5]=jButton18;
        Button_arr[3][0]=jButton19;
        Button_arr[3][1]=jButton20;
        Button_arr[3][2]=jButton21;
        Button_arr[3][3]=jButton22;
        Button_arr[3][4]=jButton23;
        Button_arr[3][5]=jButton24;
        Button_arr[4][0]=jButton25;
        Button_arr[4][1]=jButton26;
        Button_arr[4][2]=jButton27;
        Button_arr[4][3]=jButton28;
        Button_arr[4][4]=jButton29;
        Button_arr[4][5]=jButton30;
        Button_arr[5][0]=jButton31;
        Button_arr[5][1]=jButton32;
        Button_arr[5][2]=jButton33;
        Button_arr[5][3]=jButton34;
        Button_arr[5][4]=jButton35;
        Button_arr[5][5]=jButton36;

        jLabel7.setText("2-Player");
        jLabel6.setText("1-Computer");
        jLabel8.setText("0");
        jLabel9.setText("0");
        String str="Sevastopol.txt";
        
        
        try {
            BufferedReader br=new BufferedReader(new FileReader("game_boards/"+str));
            
            for(int i=0;i<6;i++)
            {
                String temp=br.readLine();
                getreg(temp,Button_arr,i);
            }
            //System.out.println(temp);\
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(warUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(warUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        jButton34 = new javax.swing.JButton();
        jButton35 = new javax.swing.JButton();
        jButton36 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton37 = new javax.swing.JButton();
        jComboBox4 = new javax.swing.JComboBox();
        jComboBox5 = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("b11");
        jButton1.setMaximumSize(new java.awt.Dimension(120, 120));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("b6");
        jButton2.setMaximumSize(new java.awt.Dimension(120, 120));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("b3");
        jButton3.setMaximumSize(new java.awt.Dimension(120, 120));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("b2");
        jButton4.setMaximumSize(new java.awt.Dimension(120, 120));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("b4");
        jButton5.setMaximumSize(new java.awt.Dimension(120, 120));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("b5");
        jButton6.setMaximumSize(new java.awt.Dimension(120, 120));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("b1");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("b2");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("b3");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("b4");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("b5");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("b6");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("b1");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setText("b2");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setText("b3");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.setText("b4");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setText("b5");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton18.setText("b6");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton19.setText("b1");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jButton20.setText("b2");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jButton21.setText("b3");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jButton22.setText("b4");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jButton23.setText("b5");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        jButton24.setText("b6");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        jButton25.setText("b1");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        jButton26.setText("b2");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        jButton27.setText("b3");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        jButton28.setText("b4");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });

        jButton29.setText("b5");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        jButton30.setText("b6");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });

        jButton31.setText("b1");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });

        jButton32.setText("b2");
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton32ActionPerformed(evt);
            }
        });

        jButton33.setText("b3");
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton33ActionPerformed(evt);
            }
        });

        jButton34.setText("b4");
        jButton34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton34ActionPerformed(evt);
            }
        });

        jButton35.setText("b5");
        jButton35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton35ActionPerformed(evt);
            }
        });

        jButton36.setText("b6");
        jButton36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton36ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("         Warfare Game");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setMaximumSize(new java.awt.Dimension(160, 21));
        jLabel1.setPreferredSize(new java.awt.Dimension(150, 21));

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("MAP");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Keren", "Narvik", "Sevastopol", "Smolensk", "Westerplatte" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Player 1");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Computer", "Player" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Player 2");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Player", "Computer" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("SCORES");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("jLabel6");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("jLabel7");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("jLabel8");
        jLabel8.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel8.setPreferredSize(new java.awt.Dimension(70, 28));

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("jLabel9");
        jLabel9.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel9.setPreferredSize(new java.awt.Dimension(70, 28));

        jButton37.setText("Start");
        jButton37.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton37.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton37ActionPerformed(evt);
            }
        });

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Minimax", "α–β pruning" }));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Minimax", "α–β pruning" }));
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(jComboBox5, 0, 1, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jComboBox4, 0, 1, Short.MAX_VALUE)))
                        .addGap(41, 41, 41))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addComponent(jLabel4))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton18))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton12))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton24))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton25)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton27)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton28)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton29)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton30))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton31)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton32)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton33)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton34)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton35)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton36)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE))
                                .addGap(66, 66, 66))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton37)
                        .addGap(50, 50, 50)
                        .addComponent(jLabel5)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton28, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton27, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton26, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton30, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton31, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton35, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton34, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton33, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton32, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton36, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        // TODO add your handling code here:
        
        String ab = (String) jComboBox4.getSelectedItem();
        if(ab.equals("α–β pruning") && ((String )jComboBox2.getSelectedItem()).equals("Computer"))
            alphabeta1=true;
        else
            alphabeta1=false;
        
        for(int i=0;i<6;i++)
        {
            for(int j=0;j<6;j++)
            {
                occupied[i][j]=-1;
                Button_arr[i][j].setBackground(Color.LIGHT_GRAY);
                Button_arr[i][j].setForeground(Color.black);
            }
        }

        scores[0]=0;
        scores[1]=0;

        jLabel8.setText(""+scores[0]);
        jLabel9.setText(""+scores[1]);

        turn=0;
        jButton37.setText("Start");
        started=false;
        
        
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jButton37ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton37ActionPerformed
        // TODO add your handling code here:
        if(jButton37.getText().equals("Start"))
        {
            started=true;
            automatic_action();
            jButton37.setText("Restart");

        }
        else if(jButton37.getText().equals("Restart"))
        {
            for(int i=0;i<6;i++)
            {
                for(int j=0;j<6;j++)
                {
                    occupied[i][j]=-1;
                    Button_arr[i][j].setBackground(Color.LIGHT_GRAY);
                    Button_arr[i][j].setForeground(Color.black);
                }
            }

            scores[0]=0;
            scores[1]=0;

            jLabel8.setText(""+scores[0]);
            jLabel9.setText(""+scores[1]);

            turn=0;
            automatic_action();

        }

    }//GEN-LAST:event_jButton37ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        player_2 = (String) jComboBox3.getSelectedItem();
        jLabel7.setText("2-"+player_2);
        
        if(player_2.equals("Player"))
        {
            jComboBox5.setEnabled(false);
        }
        else
        {
            jComboBox5.setEnabled(true);
        }

        for(int i=0;i<6;i++)
        {
            for(int j=0;j<6;j++)
            {
                occupied[i][j]=-1;
                Button_arr[i][j].setBackground(Color.LIGHT_GRAY);
                Button_arr[i][j].setForeground(Color.black);
            }
        }

        scores[0]=0;
        scores[1]=0;

        jLabel8.setText(""+scores[0]);
        jLabel9.setText(""+scores[1]);

        turn=0;

        jButton37.setText("Start");
        started=false;

    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        player_1 = (String) jComboBox2.getSelectedItem();
        
        if(player_1.equals("Player"))
        {
            jComboBox4.setEnabled(false);
        }
        else
        {
            jComboBox4.setEnabled(true);
        }
        
        jLabel6.setText("1-"+player_1);

        for(int i=0;i<6;i++)
        {
            for(int j=0;j<6;j++)
            {
                occupied[i][j]=-1;
                Button_arr[i][j].setBackground(Color.LIGHT_GRAY);
                Button_arr[i][j].setForeground(Color.black);
            }
        }

        scores[0]=0;
        scores[1]=0;

        jLabel8.setText(""+scores[0]);
        jLabel9.setText(""+scores[1]);

        turn=0;
        jButton37.setText("Start");
        started=false;

    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

        String str  = (String)jComboBox1.getSelectedItem();
        JButton arr[][]={{jButton1,jButton2,jButton3,jButton4,jButton5,jButton6},{jButton7,jButton8,jButton9,jButton10,jButton11,jButton12},{jButton13,jButton14,jButton15,jButton16,jButton17,jButton18},{jButton19,jButton20,jButton21,jButton22,jButton23,jButton24},{jButton25,jButton26,jButton27,jButton28,jButton29,jButton30},{jButton31,jButton32,jButton33,jButton34,jButton35,jButton36}};

        BufferedReader br = null;
        try {
            br = new BufferedReader(new FileReader("game_boards/"+str+".txt"));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(warUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        for(int i=0;i<6;i++)
        {
            String temp = null;
            try {
                temp = br.readLine();
            } catch (IOException ex) {
                Logger.getLogger(warUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            getreg(temp,arr,i);
        }

        for(int i=0;i<6;i++)
        {
            for(int j=0;j<6;j++)
            {
                occupied[i][j]=-1;
                Button_arr[i][j].setBackground(Color.LIGHT_GRAY);
                Button_arr[i][j].setForeground(Color.black);
            }
        }

        scores[0]=0;
        scores[1]=0;

        jLabel8.setText(""+scores[0]);
        jLabel9.setText(""+scores[1]);

        turn=0;

        jButton37.setText("Start");
        started=false;

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton36ActionPerformed
        step(jButton36.getToolTipText());
    }//GEN-LAST:event_jButton36ActionPerformed

    private void jButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton35ActionPerformed
        step(jButton35.getToolTipText());
    }//GEN-LAST:event_jButton35ActionPerformed

    private void jButton34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton34ActionPerformed
        step(jButton34.getToolTipText());
    }//GEN-LAST:event_jButton34ActionPerformed

    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton33ActionPerformed
        step(jButton33.getToolTipText());
    }//GEN-LAST:event_jButton33ActionPerformed

    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton32ActionPerformed
        step(jButton32.getToolTipText());
    }//GEN-LAST:event_jButton32ActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        step(jButton31.getToolTipText());
    }//GEN-LAST:event_jButton31ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        step(jButton30.getToolTipText());
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        step(jButton29.getToolTipText());
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        step(jButton28.getToolTipText());
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        step(jButton27.getToolTipText());
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        step(jButton26.getToolTipText());
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        step(jButton25.getToolTipText());
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        step(jButton24.getToolTipText());
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        step(jButton23.getToolTipText());
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        step(jButton22.getToolTipText());
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        step(jButton21.getToolTipText());
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        step(jButton20.getToolTipText());
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        step(jButton19.getToolTipText());
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        step(jButton18.getToolTipText());
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        step(jButton17.getToolTipText());
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        step(jButton16.getToolTipText());
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        step(jButton15.getToolTipText());
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        step(jButton14.getToolTipText());
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        step(jButton13.getToolTipText());
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        step(jButton12.getToolTipText());
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        step(jButton11.getToolTipText());
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        step(jButton10.getToolTipText());
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        step(jButton9.getToolTipText());
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        step(jButton8.getToolTipText());
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        step(jButton7.getToolTipText());
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        step(jButton6.getToolTipText());
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        step(jButton5.getToolTipText());
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        step(jButton4.getToolTipText());
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        step(jButton3.getToolTipText());
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        step(jButton2.getToolTipText());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        step(jButton1.getToolTipText());

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        // TODO add your handling code here:
        String ab = (String) jComboBox4.getSelectedItem();
        if(ab.equals("α–β pruning")&& ((String )jComboBox3.getSelectedItem()).equals("Computer"))
            alphabeta2=true;
        else
            alphabeta2=false;
        
        for(int i=0;i<6;i++)
        {
            for(int j=0;j<6;j++)
            {
                occupied[i][j]=-1;
                Button_arr[i][j].setBackground(Color.LIGHT_GRAY);
                Button_arr[i][j].setForeground(Color.black);
            }
        }

        scores[0]=0;
        scores[1]=0;

        jLabel8.setText(""+scores[0]);
        jLabel9.setText(""+scores[1]);

        turn=0;
        jButton37.setText("Start");
        started=false;
        
    }//GEN-LAST:event_jComboBox5ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    private String getreg(String qu,JButton arr[][],int row) {
        
      String pattern = "\\s*[0-9]+\\s*";
      String temp="";

      Pattern r = Pattern.compile(pattern);
      Matcher m = r.matcher(qu);
      int cnt=0;
      while(m.find( )) {
          
          temp=m.group().trim();
          int val=Integer.parseInt(temp);
          if(val<0)
          {
              System.out.println("Error in file values");
          }
          String txt;
          txt=String.format("%02d", val);
          arr[row][cnt].setText(txt);
          arr[row][cnt].setToolTipText(""+row+""+cnt);
          arr[row][cnt].setBackground(Color.LIGHT_GRAY);
          
          map_matrix[row][cnt]=val;
          cnt++;
          if(cnt==6)
              break;
           
      } 
        return qu;
    }
    
    
    private void step(String pos)
    {
        int i ,j;
        int position;
        position = Integer.parseInt(pos);
        j=position%10;
        position = position/10;
        i=position%10;
        System.out.println(i+" "+j );
        if(started)
        {
            if(occupied[i][j]!=-1)
            {
                started=false;
                return;
            }
            else if(turn==0 && player_1.equals("Player"))
            {
                
                occupied[i][j]=turn;
                System.out.println("func: step turn: 0 player1 makechanges blue "+i+" "+j);
                makechanges(i,j,turn,Color.blue);
                turn=(turn+1)%2;
                jLabel8.setText(""+scores[0]);
                jLabel9.setText(""+scores[1]);
                automatic_action();
            }
            else if(turn==1 && player_2.equals("Player"))
            {
                
                occupied[i][j]=turn;
                System.out.println("func: step turn: 1 player2 makechanges green "+i+" "+j);
                makechanges(i,j,turn,Color.green);
                turn=(turn+1)%2;
                jLabel8.setText(""+scores[0]);
                jLabel9.setText(""+scores[1]);
                automatic_action();
            }
        }
                    
    }
    
    private void automatic_action()
    {
        if(turn==0 && player_1.equals("Computer"))
        {
            int[] res=new int[2];
            /*
            for(int i=0;i<6;i++)
            {
                for(int j=0;j<6;j++)
                {
                    System.out.print(" "+occupied[i][j]);
                }
                System.out.println();
            }
            */
            if(alphabeta1)
            {
                alphabeta_minmax(map_matrix,occupied,turn,scores,0,res,-6000,6000,0,0);
            }
            else
            {
                get_minmax(map_matrix,occupied,turn,scores,0,res);
            }
            
            System.out.println("minmax func: auto turn: 0 Computer makechanges blue "+res[0]+" "+res[1]);
            
            if(res[0]==-1 || res[1]==-1)
            {
                started=false;
                return;
            }
  
            occupied[res[0]][res[1]]=turn;
            makechanges(res[0],res[1],turn,Color.blue);
            turn=(turn+1)%2;
            jLabel8.setText(""+scores[0]);
            jLabel9.setText(""+scores[1]);
        }
        if(turn==1 && player_2.equals("Computer"))
        {
            int[] res=new int[2];
            
            if(alphabeta2)
            {
                alphabeta_minmax(map_matrix,occupied,turn,scores,0,res,-6000,6000,0,0);
            }
            else
            {
                get_minmax(map_matrix,occupied,turn,scores,0,res);
            }
            System.out.println("minmax func: auto turn: 1 Computer makechanges green "+res[0]+" "+res[1]);
            
            if(res[0]==-1 || res[1]==-1)
            {
                return;
            }
            
            occupied[res[0]][res[1]]=turn;
            makechanges(res[0],res[1],turn,Color.green);
            turn=(turn+1)%2;
            jLabel8.setText(""+scores[0]);
            jLabel9.setText(""+scores[1]);
            if(player_1.equals("Computer"))
            {
                /*
                try {
                    Thread.sleep(100);
                } catch (InterruptedException ex) {
                    Logger.getLogger(warUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                */
                
                
                
                automatic_action();
            }
            
            
        }
    }
    
    
    private int get_minmax(int val[][],int occupied[][],int max_min,int[] eval_scores,int depth,int[] result)
    {
        if(depth==4)
        {
            return (eval_scores[0]-eval_scores[1]);
        }
            
        int[][] changes=new int[3][2];
        int change_cnt=0;
        int[] temp_scores=new int[2];
        int[] temp_res=new int[2];
        
        int temp_val;
        
        if(max_min==0)
        {
            temp_val=-5000;
        }
        else
        {
            temp_val=5000;
        }
        
        

        for(int i=0;i<6;i++)
        {
            for(int j=0;j<6;j++)
            {
                if(occupied[i][j]==-1)
                {
                    change_cnt = 0;
                    temp_scores[0]=eval_scores[0];
                    temp_scores[1]=eval_scores[1];
                    occupied[i][j]=max_min;
                    temp_scores[max_min]+=val[i][j];
                    if(i>0 && occupied[i-1][j]==max_min)
                    {
                        if(j<5 && occupied[i][j+1]==(max_min+1)%2)
                        {
                            changes[change_cnt][0]=i;
                            changes[change_cnt][1]=j+1;
                            change_cnt++;
                            temp_scores[max_min]+=val[i][j+1];
                            temp_scores[(max_min+1)%2]-=val[i][j+1];
                            occupied[i][j+1]=max_min;
                        }
                        if(j>0 && occupied[i][j-1]==(max_min+1)%2)
                        {
                            changes[change_cnt][0]=i;
                            changes[change_cnt][1]=j-1;
                            change_cnt++;
                            temp_scores[max_min]+=val[i][j-1];
                            temp_scores[(max_min+1)%2]-=val[i][j-1];
                            occupied[i][j-1]=max_min;
                        }
                        if(i<5 && occupied[i+1][j]==(max_min+1)%2)
                        {
                            changes[change_cnt][0]=i+1;
                            changes[change_cnt][1]=j;
                            change_cnt++;
                            temp_scores[max_min]+=val[i+1][j];
                            temp_scores[(max_min+1)%2]-=val[i+1][j];
                            occupied[i+1][j]=max_min;
                        }
                    }
                    else if(j>0 && occupied[i][j-1]==max_min)
                    {
                        if(j<5 && occupied[i][j+1]==(max_min+1)%2)
                        {
                            changes[change_cnt][0]=i;
                            changes[change_cnt][1]=j+1;
                            change_cnt++;
                            temp_scores[max_min]+=val[i][j+1];
                            temp_scores[(max_min+1)%2]-=val[i][j+1];
                            occupied[i][j+1]=max_min;
                        }
                        if(i>0 && occupied[i-1][j]==(max_min+1)%2)
                        {
                            changes[change_cnt][0]=i-1;
                            changes[change_cnt][1]=j;
                            change_cnt++;
                            temp_scores[max_min]+=val[i-1][j];
                            temp_scores[(max_min+1)%2]-=val[i-1][j];
                            occupied[i-1][j]=max_min;
                        }
                        if(i<5 && occupied[i+1][j]==(max_min+1)%2)
                        {
                            changes[change_cnt][0]=i+1;
                            changes[change_cnt][1]=j;
                            change_cnt++;
                            temp_scores[max_min]+=val[i+1][j];
                            temp_scores[(max_min+1)%2]-=val[i+1][j];
                            occupied[i+1][j]=max_min;
                        }
                    }
                    else if(j<5 && occupied[i][j+1]==max_min)
                    {
                        if(i>0 && occupied[i-1][j]==(max_min+1)%2)
                        {
                            changes[change_cnt][0]=i-1;
                            changes[change_cnt][1]=j;
                            change_cnt++;
                            temp_scores[max_min]+=val[i-1][j];
                            temp_scores[(max_min+1)%2]-=val[i-1][j];
                            occupied[i-1][j]=max_min;
                        }
                        if(j>0 && occupied[i][j-1]==(max_min+1)%2)
                        {
                            changes[change_cnt][0]=i;
                            changes[change_cnt][1]=j-1;
                            change_cnt++;
                            temp_scores[max_min]+=val[i][j-1];
                            temp_scores[(max_min+1)%2]-=val[i][j-1];
                            occupied[i][j-1]=max_min;
                        }
                        if(i<5 && occupied[i+1][j]==(max_min+1)%2)
                        {
                            changes[change_cnt][0]=i+1;
                            changes[change_cnt][1]=j;
                            change_cnt++;
                            temp_scores[max_min]+=val[i+1][j];
                            temp_scores[(max_min+1)%2]-=val[i+1][j];
                            occupied[i+1][j]=max_min;
                        }
                    }
                    else if(i<5 && occupied[i+1][j]==max_min)
                    {
                        if(j<5 && occupied[i][j+1]==(max_min+1)%2)
                        {
                            changes[change_cnt][0]=i;
                            changes[change_cnt][1]=j+1;
                            change_cnt++;
                            temp_scores[max_min]+=val[i][j+1];
                            temp_scores[(max_min+1)%2]-=val[i][j+1];
                            occupied[i][j+1]=max_min;
                        }
                        if(j>0 && occupied[i][j-1]==(max_min+1)%2)
                        {
                            changes[change_cnt][0]=i;
                            changes[change_cnt][1]=j-1;
                            change_cnt++;
                            temp_scores[max_min]+=val[i][j-1];
                            temp_scores[(max_min+1)%2]-=val[i][j-1];
                            occupied[i][j-1]=max_min;
                        }
                        if(i>0 && occupied[i-1][j]==(max_min+1)%2)
                        {
                            changes[change_cnt][0]=i-1;
                            changes[change_cnt][1]=j;
                            change_cnt++;
                            temp_scores[max_min]+=val[i-1][j];
                            temp_scores[(max_min+1)%2]-=val[i-1][j];
                            occupied[i-1][j]=max_min;
                        }
                    }
                    
                    int eval=get_minmax(val,occupied,((max_min+1)%2),temp_scores,depth+1,temp_res);
                    if(max_min==0)
                    {
                        if(eval>temp_val)
                        {
                            temp_val=eval;
                            result[0]=i;
                            result[1]=j;
                        }
                    }
                    else
                    {
                        if(eval<temp_val)
                        {
                            temp_val=eval;
                            result[0]=i;
                            result[1]=j;
                        }
                    }
                    
                    for(int k=0;k<change_cnt;k++)
                    {
                        occupied[changes[k][0]][changes[k][1]]=(max_min+1)%2;
                    }
                    occupied[i][j]=-1;
                }
                
                    
            }
            
        }
        
        if(temp_val==5000 || temp_val==-5000)
        {
            result[0]=-1;
            result[1]=-1;
            return eval_scores[0]-eval_scores[1];
        }
        
        return temp_val;
        
    }
    
    private int alphabeta_minmax(int val[][],int occupied[][],int max_min,int[] eval_scores,int depth,int[] result,int alpha,int beta,int x,int y)
    {
        if(depth==4)
        {
            return (eval_scores[0]-eval_scores[1]);
        }
        
        int[][] changes=new int[3][2];
        int change_cnt=0;
        int[] temp_scores=new int[2];
        int[] temp_res=new int[2];
        
        int temp_val;
        
        if(max_min==0)
        {
            temp_val=-5000;
        }
        else
        {
            temp_val=5000;
        }
        
        
        
        for(int i=0;i<6;i++)
        {
            for(int j=0;j<6;j++)
            {
                if(occupied[i][j]==-1)
                {
                    change_cnt = 0;
                    temp_scores[0]=eval_scores[0];
                    temp_scores[1]=eval_scores[1];
                    occupied[i][j]=max_min;
                    temp_scores[max_min]+=val[i][j];
                    if(i>0 && occupied[i-1][j]==max_min)
                    {
                        if(j<5 && occupied[i][j+1]==(max_min+1)%2)
                        {
                            changes[change_cnt][0]=i;
                            changes[change_cnt][1]=j+1;
                            change_cnt++;
                            temp_scores[max_min]+=val[i][j+1];
                            temp_scores[(max_min+1)%2]-=val[i][j+1];
                            occupied[i][j+1]=max_min;
                        }
                        if(j>0 && occupied[i][j-1]==(max_min+1)%2)
                        {
                            changes[change_cnt][0]=i;
                            changes[change_cnt][1]=j-1;
                            change_cnt++;
                            temp_scores[max_min]+=val[i][j-1];
                            temp_scores[(max_min+1)%2]-=val[i][j-1];
                            occupied[i][j-1]=max_min;
                        }
                        if(i<5 && occupied[i+1][j]==(max_min+1)%2)
                        {
                            changes[change_cnt][0]=i+1;
                            changes[change_cnt][1]=j;
                            change_cnt++;
                            temp_scores[max_min]+=val[i+1][j];
                            temp_scores[(max_min+1)%2]-=val[i+1][j];
                            occupied[i+1][j]=max_min;
                        }
                    }
                    else if(j>0 && occupied[i][j-1]==max_min)
                    {
                        if(j<5 && occupied[i][j+1]==(max_min+1)%2)
                        {
                            changes[change_cnt][0]=i;
                            changes[change_cnt][1]=j+1;
                            change_cnt++;
                            temp_scores[max_min]+=val[i][j+1];
                            temp_scores[(max_min+1)%2]-=val[i][j+1];
                            occupied[i][j+1]=max_min;
                        }
                        if(i>0 && occupied[i-1][j]==(max_min+1)%2)
                        {
                            changes[change_cnt][0]=i-1;
                            changes[change_cnt][1]=j;
                            change_cnt++;
                            temp_scores[max_min]+=val[i-1][j];
                            temp_scores[(max_min+1)%2]-=val[i-1][j];
                            occupied[i-1][j]=max_min;
                        }
                        if(i<5 && occupied[i+1][j]==(max_min+1)%2)
                        {
                            changes[change_cnt][0]=i+1;
                            changes[change_cnt][1]=j;
                            change_cnt++;
                            temp_scores[max_min]+=val[i+1][j];
                            temp_scores[(max_min+1)%2]-=val[i+1][j];
                            occupied[i+1][j]=max_min;
                        }
                    }
                    else if(j<5 && occupied[i][j+1]==max_min)
                    {
                        if(i>0 && occupied[i-1][j]==(max_min+1)%2)
                        {
                            changes[change_cnt][0]=i-1;
                            changes[change_cnt][1]=j;
                            change_cnt++;
                            temp_scores[max_min]+=val[i-1][j];
                            temp_scores[(max_min+1)%2]-=val[i-1][j];
                            occupied[i-1][j]=max_min;
                        }
                        if(j>0 && occupied[i][j-1]==(max_min+1)%2)
                        {
                            changes[change_cnt][0]=i;
                            changes[change_cnt][1]=j-1;
                            change_cnt++;
                            temp_scores[max_min]+=val[i][j-1];
                            temp_scores[(max_min+1)%2]-=val[i][j-1];
                            occupied[i][j-1]=max_min;
                        }
                        if(i<5 && occupied[i+1][j]==(max_min+1)%2)
                        {
                            changes[change_cnt][0]=i+1;
                            changes[change_cnt][1]=j;
                            change_cnt++;
                            temp_scores[max_min]+=val[i+1][j];
                            temp_scores[(max_min+1)%2]-=val[i+1][j];
                            occupied[i+1][j]=max_min;
                        }
                    }
                    else if(i<5 && occupied[i+1][j]==max_min)
                    {
                        if(j<5 && occupied[i][j+1]==(max_min+1)%2)
                        {
                            changes[change_cnt][0]=i;
                            changes[change_cnt][1]=j+1;
                            change_cnt++;
                            temp_scores[max_min]+=val[i][j+1];
                            temp_scores[(max_min+1)%2]-=val[i][j+1];
                            occupied[i][j+1]=max_min;
                        }
                        if(j>0 && occupied[i][j-1]==(max_min+1)%2)
                        {
                            changes[change_cnt][0]=i;
                            changes[change_cnt][1]=j-1;
                            change_cnt++;
                            temp_scores[max_min]+=val[i][j-1];
                            temp_scores[(max_min+1)%2]-=val[i][j-1];
                            occupied[i][j-1]=max_min;
                        }
                        if(i>0 && occupied[i-1][j]==(max_min+1)%2)
                        {
                            changes[change_cnt][0]=i-1;
                            changes[change_cnt][1]=j;
                            change_cnt++;
                            temp_scores[max_min]+=val[i-1][j];
                            temp_scores[(max_min+1)%2]-=val[i-1][j];
                            occupied[i-1][j]=max_min;
                        }
                    }
                    
                    if(max_min==0)
                    {
                        if(temp_val<beta)
                        {
                            int eval=alphabeta_minmax(val,occupied,((max_min+1)%2),temp_scores,depth+1,temp_res,alpha,beta,i,j);
                            //System.out.println("max eval depth"+depth+" eval "+eval+" xy "+i+" "+j);
                            if(eval>temp_val)
                            {
                                temp_val=eval;
                                //System.out.println("max tv received depth "+depth+" temp_val "+temp_val+" xy "+i+" "+j);
                                result[0]=i;
                                result[1]=j;
                            }
                            if(temp_val>alpha)
                            {
                                alpha=temp_val;
                                //System.out.println("ab changed depth "+depth+" alpha "+alpha +" beta "+beta+" xy "+i+" "+j);
                            }
                                
                        }
                        else
                        {
                            for(int k=0;k<change_cnt;k++)
                            {
                                occupied[changes[k][0]][changes[k][1]]=(max_min+1)%2;
                            }
                            occupied[i][j]=-1;
                            //System.out.println("pruned depth "+depth+" "+i+" "+j+" max "+ temp_val + " "+alpha+"  "+beta+" xy "+x+" "+y);
                            return temp_val;
                        }
                        
                    }
                    else
                    {
                        if(temp_val>alpha)
                        {
                            int eval=alphabeta_minmax(val,occupied,((max_min+1)%2),temp_scores,depth+1,temp_res,alpha,beta,i,j);
                            //System.out.println("min eval depth"+depth+" eval "+eval+" xy "+i+" "+j);
                            if(eval<temp_val)
                            {
                                
                                temp_val=eval;
                                //System.out.println("min tv received depth "+depth+" temp_val "+temp_val+" xy "+i+" "+j);

                                result[0]=i;
                                result[1]=j;
                            }
                            if(temp_val<beta)
                            {
                                beta=temp_val;
                                //System.out.println("ab changed depth "+depth+" alpha "+alpha +" beta "+beta+" xy "+i+" "+j);
                                
                            }
                                
                        }
                        else
                        {
                            for(int k=0;k<change_cnt;k++)
                            {
                                occupied[changes[k][0]][changes[k][1]]=(max_min+1)%2;
                            }
                            occupied[i][j]=-1;
                            //System.out.println("pruned depth "+depth+" "+i+" "+j+" min "+ temp_val + " "+alpha+"  "+beta+" xy "+x+" "+y);
                            return temp_val;
                        }
                        
                    }
                    
                    for(int k=0;k<change_cnt;k++)
                    {
                        occupied[changes[k][0]][changes[k][1]]=(max_min+1)%2;
                    }
                    occupied[i][j]=-1;
                }
                
                
            }
            
        }
        
        if(temp_val==5000 || temp_val==-5000)
        {
            result[0]=-1;
            result[1]=-1;
            return eval_scores[0]-eval_scores[1];
        }
        
        return temp_val;
        
    }
    
    
    
    
    private void makechanges(int i, int j, int turn, Color colr) {
        
        if(i>0 && occupied[i-1][j]==turn)
        {
            System.out.println("make 1");
            if(j<5 && occupied[i][j+1]==(turn+1)%2)
            {
                Button_arr[i][j+1].setBackground(colr);
                Button_arr[i][j+1].setForeground(Color.white);
                scores[turn]+=map_matrix[i][j+1];
                scores[(turn+1)%2]-=map_matrix[i][j+1];
                occupied[i][j+1]=turn;
                
            }
            if(j>0 && occupied[i][j-1]==(turn+1)%2)
            {
                Button_arr[i][j-1].setBackground(colr);
                Button_arr[i][j-1].setForeground(Color.white);
                scores[turn]+=map_matrix[i][j-1];
                scores[(turn+1)%2]-=map_matrix[i][j-1];
                occupied[i][j-1]=turn;
                
            }
            if(i<5 && occupied[i+1][j]==(turn+1)%2)
            {
                Button_arr[i+1][j].setBackground(colr);
                Button_arr[i+1][j].setForeground(Color.white);
                scores[turn]+=map_matrix[i+1][j];
                scores[(turn+1)%2]-=map_matrix[i+1][j];
                occupied[i+1][j]=turn;
                
            }
        }
        else if(j>0 && occupied[i][j-1]==turn)
        {
            System.out.println("make 2");
            if(j<5 && occupied[i][j+1]==(turn+1)%2)
            {
                Button_arr[i][j+1].setBackground(colr);
                Button_arr[i][j+1].setForeground(Color.white);
                scores[turn]+=map_matrix[i][j+1];
                scores[(turn+1)%2]-=map_matrix[i][j+1];
                occupied[i][j+1]=turn;
                
            }
            if(i>0 && occupied[i-1][j]==(turn+1)%2)
            {
                Button_arr[i-1][j].setBackground(colr);
                Button_arr[i-1][j].setForeground(Color.white);
                scores[turn]+=map_matrix[i-1][j];
                scores[(turn+1)%2]-=map_matrix[i-1][j];
                occupied[i-1][j]=turn;
               
            }
            if(i<5 && occupied[i+1][j]==(turn+1)%2)
            {
                Button_arr[i+1][j].setBackground(colr);
                Button_arr[i+1][j].setForeground(Color.white);
                scores[turn]+=map_matrix[i+1][j];
                scores[(turn+1)%2]-=map_matrix[i+1][j];
                occupied[i+1][j]=turn;
                
            }
        }
        else if(j<5 && occupied[i][j+1]==turn)
        {
            System.out.println("make 3");
            if(i>0 && occupied[i-1][j]==(turn+1)%2)
            {
                Button_arr[i-1][j].setBackground(colr);
                Button_arr[i-1][j].setForeground(Color.white);
                scores[turn]+=map_matrix[i-1][j];
                scores[(turn+1)%2]-=map_matrix[i-1][j];
                occupied[i-1][j]=turn;
                
            }
            if(j>0 && occupied[i][j-1]==(turn+1)%2)
            {
                Button_arr[i][j-1].setBackground(colr);
                Button_arr[i][j-1].setForeground(Color.white);
                scores[turn]+=map_matrix[i][j-1];
                scores[(turn+1)%2]-=map_matrix[i][j-1];
                occupied[i][j-1]=turn;
                
            }
            if(i<5 && occupied[i+1][j]==(turn+1)%2)
            {
                Button_arr[i+1][j].setBackground(colr);
                Button_arr[i+1][j].setForeground(Color.white);
                scores[turn]+=map_matrix[i+1][j];
                scores[(turn+1)%2]-=map_matrix[i+1][j];
                occupied[i+1][j]=turn;
                
            }
        }
        else if(i<5 && occupied[i+1][j]==turn)
        {
            System.out.println("make 4");
            if(j<5 && occupied[i][j+1]==(turn+1)%2)
            {
                Button_arr[i][j+1].setBackground(colr);
                Button_arr[i][j+1].setForeground(Color.white);
                scores[turn]+=map_matrix[i][j+1];
                scores[(turn+1)%2]-=map_matrix[i][j+1];
                occupied[i][j+1]=turn;
                
            }
            if(j>0 && occupied[i][j-1]==(turn+1)%2)
            {
                Button_arr[i][j-1].setBackground(colr);
                Button_arr[i][j-1].setForeground(Color.white);
                scores[turn]+=map_matrix[i][j-1];
                scores[(turn+1)%2]-=map_matrix[i][j-1];
                occupied[i][j-1]=turn;
                
            }
            if(i>0 && occupied[i-1][j]==(turn+1)%2)
            {
                Button_arr[i-1][j].setBackground(colr);
                Button_arr[i-1][j].setForeground(Color.white);
                scores[turn]+=map_matrix[i-1][j];
                scores[(turn+1)%2]-=map_matrix[i-1][j];
                occupied[i-1][j]=turn;
            }
        }
        
        System.out.println("make 0");
        
        Button_arr[i][j].setBackground(colr);
        Button_arr[i][j].setForeground(Color.white);
        
        scores[turn]+=map_matrix[i][j];
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton36;
    private javax.swing.JButton jButton37;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    
}
